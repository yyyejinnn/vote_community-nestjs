# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CICD Docker

# 환경변수
env:
  DOCKER_IMAGE: ghcr.io/${{ github.actor }}/vote-api-server-img
  DOCKER_CONTAINER: vote-api-server

# 이벤트
on:
  pull_request:
    branches: ['main']
  push:
    branches: ['main']

jobs:
  # 도커 이미지 빌드
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v1

      - name: Login ghcr
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest

  # EC2 배포
  deploy:
    needs: build
    runs-on: [self-hosted, label-vote]

    steps:
      - name: Make envfile
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_NODE_ENV: 'production'
          # jwt
          envkey_ACCESS_TOKEN_SECRET_KEY: ${{ secrets.ACCESS_TOKEN_SECRET_KEY }}
          envkey_ACCESS_TOKEN_EXPIRATION_TIME: ${{ secrets.ACCESS_TOKEN_EXPIRATION_TIME }}
          envkey_REFRESH_TOKEN_SECRET_KEY: ${{ secrets.REFRESH_TOKEN_SECRET_KEY }}
          envkey_REFRESH_TOKEN_EXPIRATION_TIME: ${{ secrets.REFRESH_TOKEN_EXPIRATION_TIME }}
          # aws
          envkey_S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
          envkey_AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          envkey_AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          # db
          envkey_DB_HOST: ${{ secrets.DB_HOST }}
          envkey_DB_USERNAME: ${{ secrets.DB_USERNAME }}
          envkey_DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          envkey_DB_NAME: ${{ secrets.DB_NAME }}
          # redis
          envkey_REDIS_HOST: ${{ secrets.REDIS_HOST }}
          envkey_REDIS_AUTH_PASSWORD: ${{ secrets.REDIS_AUTH_PASSWORD }}
          file_name: .env
          fail_on_empty: true

      - name: Login ghcr
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Run docker
        run: |
          docker stop ${{ env.DOCKER_CONTAINER }} && docker rm ${{ env.DOCKER_CONTAINER }} && docker rmi ${{ env.DOCKER_IMAGE }}:latest
          docker run -d -p 80:3000 --env-file ./.env --name ${{ env.DOCKER_CONTAINER }} ${{ env.DOCKER_IMAGE }}:latest
