// *** DO NOT EDIT. GENERATED BY PRISMIX. ***
datasource db {
	provider = "sqlite"
	url = env("DATABASE_URL")
}
generator client {
	provider = "prisma-client-js"
}
model Users {
	id Int @id @default(autoincrement())
	email String @unique
	password String 
	nickname String 
	refreshToken RefreshTokens? @relation(name: "RefreshTokensToUsers")
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt
	votes Votes[] @relation(name: "UsersToVotes")
	votedUsers VotedUsers[] @relation(name: "UsersToVotedUsers")
	@@map("users")
}
model RefreshTokens {
	token String @unique
	user Users @relation(name: "RefreshTokensToUsers", fields: [userId], references: [id])
	userId Int @unique
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt
	@@map("refresh-tokens")
}
model Votes {
	id Int @id @default(autoincrement())
	title String 
	pollTotal Int @default(0)
	user Users @relation(name: "UsersToVotes", fields: [userId], references: [id])
	userId Int 
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt
	voteOption VoteOptions[] @relation(name: "VoteOptionsToVotes")
	votedUsers VotedUsers[] @relation(name: "VotedUsersToVotes")
	@@map("votes")
}
model VoteOptions {
	id Int @id @default(autoincrement())
	title String 
	poll Int @default(0)
	vote Votes @relation(name: "VoteOptionsToVotes", fields: [voteId], references: [id])
	voteId Int 
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt
	votedUsers VotedUsers[] @relation(name: "VoteOptionsToVotedUsers")
	@@map("vote-options")
}
model VotedUsers {
	user Users @relation(name: "UsersToVotedUsers", fields: [userId], references: [id])
	userId Int 
	vote Votes @relation(name: "VotedUsersToVotes", fields: [voteId], references: [id])
	voteId Int 
	voteOptions VoteOptions @relation(name: "VoteOptionsToVotedUsers", fields: [voteOptionsId], references: [id])
	voteOptionsId Int 
	@@map("voted-users")
	@@id([userId, voteOptionsId])
}